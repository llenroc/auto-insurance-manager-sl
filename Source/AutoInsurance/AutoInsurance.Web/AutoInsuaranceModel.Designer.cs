//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AutoInsuarance.Model", "FK_InsuarancePolicy_Agencies", "Agencies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AutoInsurance.Web.Agency), "InsurancePolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoInsurance.Web.InsurancePolicy), true)]
[assembly: EdmRelationshipAttribute("AutoInsuarance.Model", "FK_Autos_AutoTypes", "AutoTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AutoInsurance.Web.AutoType), "Autos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoInsurance.Web.Auto), true)]
[assembly: EdmRelationshipAttribute("AutoInsuarance.Model", "FK_Autos_FuelTypes", "FuelTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AutoInsurance.Web.FuelType), "Autos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoInsurance.Web.Auto), true)]
[assembly: EdmRelationshipAttribute("AutoInsuarance.Model", "FK_Autos_Persons", "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AutoInsurance.Web.Person), "Autos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoInsurance.Web.Auto), true)]
[assembly: EdmRelationshipAttribute("AutoInsuarance.Model", "FK_Autos_Purposes", "Purposes", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AutoInsurance.Web.Purpose), "Autos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoInsurance.Web.Auto), true)]
[assembly: EdmRelationshipAttribute("AutoInsuarance.Model", "FK_InsurancePolicy_Autos", "Autos", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AutoInsurance.Web.Auto), "InsurancePolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoInsurance.Web.InsurancePolicy), true)]
[assembly: EdmRelationshipAttribute("AutoInsuarance.Model", "FK_InsuarancePolicy_Companies", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AutoInsurance.Web.Company), "InsurancePolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoInsurance.Web.InsurancePolicy), true)]

#endregion

namespace AutoInsurance.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AutoInsuaranceEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AutoInsuaranceEntities object using the connection string found in the 'AutoInsuaranceEntities' section of the application configuration file.
        /// </summary>
        public AutoInsuaranceEntities() : base("name=AutoInsuaranceEntities", "AutoInsuaranceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutoInsuaranceEntities object.
        /// </summary>
        public AutoInsuaranceEntities(string connectionString) : base(connectionString, "AutoInsuaranceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutoInsuaranceEntities object.
        /// </summary>
        public AutoInsuaranceEntities(EntityConnection connection) : base(connection, "AutoInsuaranceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Agency> Agencies
        {
            get
            {
                if ((_Agencies == null))
                {
                    _Agencies = base.CreateObjectSet<Agency>("Agencies");
                }
                return _Agencies;
            }
        }
        private ObjectSet<Agency> _Agencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Auto> Autos
        {
            get
            {
                if ((_Autos == null))
                {
                    _Autos = base.CreateObjectSet<Auto>("Autos");
                }
                return _Autos;
            }
        }
        private ObjectSet<Auto> _Autos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AutoType> AutoTypes
        {
            get
            {
                if ((_AutoTypes == null))
                {
                    _AutoTypes = base.CreateObjectSet<AutoType>("AutoTypes");
                }
                return _AutoTypes;
            }
        }
        private ObjectSet<AutoType> _AutoTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FuelType> FuelTypes
        {
            get
            {
                if ((_FuelTypes == null))
                {
                    _FuelTypes = base.CreateObjectSet<FuelType>("FuelTypes");
                }
                return _FuelTypes;
            }
        }
        private ObjectSet<FuelType> _FuelTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsurancePolicy> InsurancePolicies
        {
            get
            {
                if ((_InsurancePolicies == null))
                {
                    _InsurancePolicies = base.CreateObjectSet<InsurancePolicy>("InsurancePolicies");
                }
                return _InsurancePolicies;
            }
        }
        private ObjectSet<InsurancePolicy> _InsurancePolicies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> Persons
        {
            get
            {
                if ((_Persons == null))
                {
                    _Persons = base.CreateObjectSet<Person>("Persons");
                }
                return _Persons;
            }
        }
        private ObjectSet<Person> _Persons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Purpose> Purposes
        {
            get
            {
                if ((_Purposes == null))
                {
                    _Purposes = base.CreateObjectSet<Purpose>("Purposes");
                }
                return _Purposes;
            }
        }
        private ObjectSet<Purpose> _Purposes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Agencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgencies(Agency agency)
        {
            base.AddObject("Agencies", agency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Autos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAutos(Auto auto)
        {
            base.AddObject("Autos", auto);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AutoTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAutoTypes(AutoType autoType)
        {
            base.AddObject("AutoTypes", autoType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FuelTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFuelTypes(FuelType fuelType)
        {
            base.AddObject("FuelTypes", fuelType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsurancePolicies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsurancePolicies(InsurancePolicy insurancePolicy)
        {
            base.AddObject("InsurancePolicies", insurancePolicy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Persons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersons(Person person)
        {
            base.AddObject("Persons", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Purposes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurposes(Purpose purpose)
        {
            base.AddObject("Purposes", purpose);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoInsuarance.Model", Name="Agency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Agency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Agency object.
        /// </summary>
        /// <param name="agencyId">Initial value of the AgencyId property.</param>
        public static Agency CreateAgency(global::System.String agencyId)
        {
            Agency agency = new Agency();
            agency.AgencyId = agencyId;
            return agency;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AgencyId
        {
            get
            {
                return _AgencyId;
            }
            set
            {
                if (_AgencyId != value)
                {
                    OnAgencyIdChanging(value);
                    ReportPropertyChanging("AgencyId");
                    _AgencyId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AgencyId");
                    OnAgencyIdChanged();
                }
            }
        }
        private global::System.String _AgencyId;
        partial void OnAgencyIdChanging(global::System.String value);
        partial void OnAgencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_InsuarancePolicy_Agencies", "InsurancePolicy")]
        public EntityCollection<InsurancePolicy> InsurancePolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InsurancePolicy>("AutoInsuarance.Model.FK_InsuarancePolicy_Agencies", "InsurancePolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InsurancePolicy>("AutoInsuarance.Model.FK_InsuarancePolicy_Agencies", "InsurancePolicy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoInsuarance.Model", Name="Auto")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Auto : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Auto object.
        /// </summary>
        /// <param name="autoId">Initial value of the AutoId property.</param>
        public static Auto CreateAuto(global::System.Int32 autoId)
        {
            Auto auto = new Auto();
            auto.AutoId = autoId;
            return auto;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutoId
        {
            get
            {
                return _AutoId;
            }
            set
            {
                if (_AutoId != value)
                {
                    OnAutoIdChanging(value);
                    ReportPropertyChanging("AutoId");
                    _AutoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AutoId");
                    OnAutoIdChanged();
                }
            }
        }
        private global::System.Int32 _AutoId;
        partial void OnAutoIdChanging(global::System.Int32 value);
        partial void OnAutoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegNumber
        {
            get
            {
                return _RegNumber;
            }
            set
            {
                OnRegNumberChanging(value);
                ReportPropertyChanging("RegNumber");
                _RegNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegNumber");
                OnRegNumberChanged();
            }
        }
        private global::System.String _RegNumber;
        partial void OnRegNumberChanging(global::System.String value);
        partial void OnRegNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FrameNumber
        {
            get
            {
                return _FrameNumber;
            }
            set
            {
                OnFrameNumberChanging(value);
                ReportPropertyChanging("FrameNumber");
                _FrameNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FrameNumber");
                OnFrameNumberChanged();
            }
        }
        private global::System.String _FrameNumber;
        partial void OnFrameNumberChanging(global::System.String value);
        partial void OnFrameNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EngineDisplacement
        {
            get
            {
                return _EngineDisplacement;
            }
            set
            {
                OnEngineDisplacementChanging(value);
                ReportPropertyChanging("EngineDisplacement");
                _EngineDisplacement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EngineDisplacement");
                OnEngineDisplacementChanged();
            }
        }
        private Nullable<global::System.Int32> _EngineDisplacement;
        partial void OnEngineDisplacementChanging(Nullable<global::System.Int32> value);
        partial void OnEngineDisplacementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Make
        {
            get
            {
                return _Make;
            }
            set
            {
                OnMakeChanging(value);
                ReportPropertyChanging("Make");
                _Make = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Make");
                OnMakeChanged();
            }
        }
        private global::System.String _Make;
        partial void OnMakeChanging(global::System.String value);
        partial void OnMakeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OwnerPersonId
        {
            get
            {
                return _OwnerPersonId;
            }
            set
            {
                OnOwnerPersonIdChanging(value);
                ReportPropertyChanging("OwnerPersonId");
                _OwnerPersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OwnerPersonId");
                OnOwnerPersonIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OwnerPersonId;
        partial void OnOwnerPersonIdChanging(Nullable<global::System.Int32> value);
        partial void OnOwnerPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AutoTypeId
        {
            get
            {
                return _AutoTypeId;
            }
            set
            {
                OnAutoTypeIdChanging(value);
                ReportPropertyChanging("AutoTypeId");
                _AutoTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoTypeId");
                OnAutoTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AutoTypeId;
        partial void OnAutoTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnAutoTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PurposeId
        {
            get
            {
                return _PurposeId;
            }
            set
            {
                OnPurposeIdChanging(value);
                ReportPropertyChanging("PurposeId");
                _PurposeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurposeId");
                OnPurposeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PurposeId;
        partial void OnPurposeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPurposeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FirstRegistrationDate
        {
            get
            {
                return _FirstRegistrationDate;
            }
            set
            {
                OnFirstRegistrationDateChanging(value);
                ReportPropertyChanging("FirstRegistrationDate");
                _FirstRegistrationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstRegistrationDate");
                OnFirstRegistrationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FirstRegistrationDate;
        partial void OnFirstRegistrationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFirstRegistrationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MakeYear
        {
            get
            {
                return _MakeYear;
            }
            set
            {
                OnMakeYearChanging(value);
                ReportPropertyChanging("MakeYear");
                _MakeYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MakeYear");
                OnMakeYearChanged();
            }
        }
        private Nullable<global::System.Int32> _MakeYear;
        partial void OnMakeYearChanging(Nullable<global::System.Int32> value);
        partial void OnMakeYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SeatsCount
        {
            get
            {
                return _SeatsCount;
            }
            set
            {
                OnSeatsCountChanging(value);
                ReportPropertyChanging("SeatsCount");
                _SeatsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeatsCount");
                OnSeatsCountChanged();
            }
        }
        private Nullable<global::System.Int32> _SeatsCount;
        partial void OnSeatsCountChanging(Nullable<global::System.Int32> value);
        partial void OnSeatsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DoorsCount
        {
            get
            {
                return _DoorsCount;
            }
            set
            {
                OnDoorsCountChanging(value);
                ReportPropertyChanging("DoorsCount");
                _DoorsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoorsCount");
                OnDoorsCountChanged();
            }
        }
        private Nullable<global::System.Int32> _DoorsCount;
        partial void OnDoorsCountChanging(Nullable<global::System.Int32> value);
        partial void OnDoorsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FuelTypeId
        {
            get
            {
                return _FuelTypeId;
            }
            set
            {
                OnFuelTypeIdChanging(value);
                ReportPropertyChanging("FuelTypeId");
                _FuelTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FuelTypeId");
                OnFuelTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FuelTypeId;
        partial void OnFuelTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnFuelTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LoadingCapacity
        {
            get
            {
                return _LoadingCapacity;
            }
            set
            {
                OnLoadingCapacityChanging(value);
                ReportPropertyChanging("LoadingCapacity");
                _LoadingCapacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoadingCapacity");
                OnLoadingCapacityChanged();
            }
        }
        private Nullable<global::System.Int32> _LoadingCapacity;
        partial void OnLoadingCapacityChanging(Nullable<global::System.Int32> value);
        partial void OnLoadingCapacityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_Autos_AutoTypes", "AutoTypes")]
        public AutoType AutoType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutoType>("AutoInsuarance.Model.FK_Autos_AutoTypes", "AutoTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutoType>("AutoInsuarance.Model.FK_Autos_AutoTypes", "AutoTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AutoType> AutoTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AutoType>("AutoInsuarance.Model.FK_Autos_AutoTypes", "AutoTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AutoType>("AutoInsuarance.Model.FK_Autos_AutoTypes", "AutoTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_Autos_FuelTypes", "FuelTypes")]
        public FuelType FuelType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FuelType>("AutoInsuarance.Model.FK_Autos_FuelTypes", "FuelTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FuelType>("AutoInsuarance.Model.FK_Autos_FuelTypes", "FuelTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FuelType> FuelTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FuelType>("AutoInsuarance.Model.FK_Autos_FuelTypes", "FuelTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FuelType>("AutoInsuarance.Model.FK_Autos_FuelTypes", "FuelTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_Autos_Persons", "Persons")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AutoInsuarance.Model.FK_Autos_Persons", "Persons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AutoInsuarance.Model.FK_Autos_Persons", "Persons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("AutoInsuarance.Model.FK_Autos_Persons", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("AutoInsuarance.Model.FK_Autos_Persons", "Persons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_Autos_Purposes", "Purposes")]
        public Purpose Purpos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Purpose>("AutoInsuarance.Model.FK_Autos_Purposes", "Purposes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Purpose>("AutoInsuarance.Model.FK_Autos_Purposes", "Purposes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Purpose> PurposReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Purpose>("AutoInsuarance.Model.FK_Autos_Purposes", "Purposes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Purpose>("AutoInsuarance.Model.FK_Autos_Purposes", "Purposes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_InsurancePolicy_Autos", "InsurancePolicy")]
        public EntityCollection<InsurancePolicy> InsurancePolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InsurancePolicy>("AutoInsuarance.Model.FK_InsurancePolicy_Autos", "InsurancePolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InsurancePolicy>("AutoInsuarance.Model.FK_InsurancePolicy_Autos", "InsurancePolicy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoInsuarance.Model", Name="AutoType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AutoType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AutoType object.
        /// </summary>
        /// <param name="autoTypeId">Initial value of the AutoTypeId property.</param>
        public static AutoType CreateAutoType(global::System.Int32 autoTypeId)
        {
            AutoType autoType = new AutoType();
            autoType.AutoTypeId = autoTypeId;
            return autoType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AutoTypeId
        {
            get
            {
                return _AutoTypeId;
            }
            set
            {
                if (_AutoTypeId != value)
                {
                    OnAutoTypeIdChanging(value);
                    ReportPropertyChanging("AutoTypeId");
                    _AutoTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AutoTypeId");
                    OnAutoTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _AutoTypeId;
        partial void OnAutoTypeIdChanging(global::System.Int32 value);
        partial void OnAutoTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Coeficient
        {
            get
            {
                return _Coeficient;
            }
            set
            {
                OnCoeficientChanging(value);
                ReportPropertyChanging("Coeficient");
                _Coeficient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Coeficient");
                OnCoeficientChanged();
            }
        }
        private Nullable<global::System.Decimal> _Coeficient;
        partial void OnCoeficientChanging(Nullable<global::System.Decimal> value);
        partial void OnCoeficientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasLoadingCapacity
        {
            get
            {
                return _HasLoadingCapacity;
            }
            set
            {
                OnHasLoadingCapacityChanging(value);
                ReportPropertyChanging("HasLoadingCapacity");
                _HasLoadingCapacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasLoadingCapacity");
                OnHasLoadingCapacityChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasLoadingCapacity;
        partial void OnHasLoadingCapacityChanging(Nullable<global::System.Boolean> value);
        partial void OnHasLoadingCapacityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_Autos_AutoTypes", "Autos")]
        public EntityCollection<Auto> Autos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auto>("AutoInsuarance.Model.FK_Autos_AutoTypes", "Autos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auto>("AutoInsuarance.Model.FK_Autos_AutoTypes", "Autos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoInsuarance.Model", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static Company CreateCompany(global::System.Int32 companyId)
        {
            Company company = new Company();
            company.CompanyId = companyId;
            return company;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                if (_CompanyId != value)
                {
                    OnCompanyIdChanging(value);
                    ReportPropertyChanging("CompanyId");
                    _CompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyId");
                    OnCompanyIdChanged();
                }
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InsuranceBasePrice
        {
            get
            {
                return _InsuranceBasePrice;
            }
            set
            {
                OnInsuranceBasePriceChanging(value);
                ReportPropertyChanging("InsuranceBasePrice");
                _InsuranceBasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsuranceBasePrice");
                OnInsuranceBasePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _InsuranceBasePrice;
        partial void OnInsuranceBasePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnInsuranceBasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> YoungDriverCoeficient
        {
            get
            {
                return _YoungDriverCoeficient;
            }
            set
            {
                OnYoungDriverCoeficientChanging(value);
                ReportPropertyChanging("YoungDriverCoeficient");
                _YoungDriverCoeficient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YoungDriverCoeficient");
                OnYoungDriverCoeficientChanged();
            }
        }
        private Nullable<global::System.Decimal> _YoungDriverCoeficient;
        partial void OnYoungDriverCoeficientChanging(Nullable<global::System.Decimal> value);
        partial void OnYoungDriverCoeficientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OldDriverCoeficient
        {
            get
            {
                return _OldDriverCoeficient;
            }
            set
            {
                OnOldDriverCoeficientChanging(value);
                ReportPropertyChanging("OldDriverCoeficient");
                _OldDriverCoeficient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldDriverCoeficient");
                OnOldDriverCoeficientChanged();
            }
        }
        private Nullable<global::System.Decimal> _OldDriverCoeficient;
        partial void OnOldDriverCoeficientChanging(Nullable<global::System.Decimal> value);
        partial void OnOldDriverCoeficientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PurposePrice
        {
            get
            {
                return _PurposePrice;
            }
            set
            {
                OnPurposePriceChanging(value);
                ReportPropertyChanging("PurposePrice");
                _PurposePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurposePrice");
                OnPurposePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _PurposePrice;
        partial void OnPurposePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPurposePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AutoTypePrice
        {
            get
            {
                return _AutoTypePrice;
            }
            set
            {
                OnAutoTypePriceChanging(value);
                ReportPropertyChanging("AutoTypePrice");
                _AutoTypePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoTypePrice");
                OnAutoTypePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _AutoTypePrice;
        partial void OnAutoTypePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnAutoTypePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> VechicleDisplacementPrice
        {
            get
            {
                return _VechicleDisplacementPrice;
            }
            set
            {
                OnVechicleDisplacementPriceChanging(value);
                ReportPropertyChanging("VechicleDisplacementPrice");
                _VechicleDisplacementPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VechicleDisplacementPrice");
                OnVechicleDisplacementPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _VechicleDisplacementPrice;
        partial void OnVechicleDisplacementPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnVechicleDisplacementPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LoadingCapacityPricePer1000kg
        {
            get
            {
                return _LoadingCapacityPricePer1000kg;
            }
            set
            {
                OnLoadingCapacityPricePer1000kgChanging(value);
                ReportPropertyChanging("LoadingCapacityPricePer1000kg");
                _LoadingCapacityPricePer1000kg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoadingCapacityPricePer1000kg");
                OnLoadingCapacityPricePer1000kgChanged();
            }
        }
        private Nullable<global::System.Decimal> _LoadingCapacityPricePer1000kg;
        partial void OnLoadingCapacityPricePer1000kgChanging(Nullable<global::System.Decimal> value);
        partial void OnLoadingCapacityPricePer1000kgChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_InsuarancePolicy_Companies", "InsurancePolicy")]
        public EntityCollection<InsurancePolicy> InsurancePolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InsurancePolicy>("AutoInsuarance.Model.FK_InsuarancePolicy_Companies", "InsurancePolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InsurancePolicy>("AutoInsuarance.Model.FK_InsuarancePolicy_Companies", "InsurancePolicy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoInsuarance.Model", Name="FuelType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FuelType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FuelType object.
        /// </summary>
        /// <param name="fuelTypeId">Initial value of the FuelTypeId property.</param>
        public static FuelType CreateFuelType(global::System.Int32 fuelTypeId)
        {
            FuelType fuelType = new FuelType();
            fuelType.FuelTypeId = fuelTypeId;
            return fuelType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FuelTypeId
        {
            get
            {
                return _FuelTypeId;
            }
            set
            {
                if (_FuelTypeId != value)
                {
                    OnFuelTypeIdChanging(value);
                    ReportPropertyChanging("FuelTypeId");
                    _FuelTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FuelTypeId");
                    OnFuelTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _FuelTypeId;
        partial void OnFuelTypeIdChanging(global::System.Int32 value);
        partial void OnFuelTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_Autos_FuelTypes", "Autos")]
        public EntityCollection<Auto> Autos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auto>("AutoInsuarance.Model.FK_Autos_FuelTypes", "Autos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auto>("AutoInsuarance.Model.FK_Autos_FuelTypes", "Autos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoInsuarance.Model", Name="InsurancePolicy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsurancePolicy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsurancePolicy object.
        /// </summary>
        /// <param name="insurancePolicyId">Initial value of the InsurancePolicyId property.</param>
        public static InsurancePolicy CreateInsurancePolicy(global::System.Int32 insurancePolicyId)
        {
            InsurancePolicy insurancePolicy = new InsurancePolicy();
            insurancePolicy.InsurancePolicyId = insurancePolicyId;
            return insurancePolicy;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InsurancePolicyId
        {
            get
            {
                return _InsurancePolicyId;
            }
            set
            {
                if (_InsurancePolicyId != value)
                {
                    OnInsurancePolicyIdChanging(value);
                    ReportPropertyChanging("InsurancePolicyId");
                    _InsurancePolicyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InsurancePolicyId");
                    OnInsurancePolicyIdChanged();
                }
            }
        }
        private global::System.Int32 _InsurancePolicyId;
        partial void OnInsurancePolicyIdChanging(global::System.Int32 value);
        partial void OnInsurancePolicyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IssueDate
        {
            get
            {
                return _IssueDate;
            }
            set
            {
                OnIssueDateChanging(value);
                ReportPropertyChanging("IssueDate");
                _IssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueDate");
                OnIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IssueDate;
        partial void OnIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AgencyName
        {
            get
            {
                return _AgencyName;
            }
            set
            {
                OnAgencyNameChanging(value);
                ReportPropertyChanging("AgencyName");
                _AgencyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AgencyName");
                OnAgencyNameChanged();
            }
        }
        private global::System.String _AgencyName;
        partial void OnAgencyNameChanging(global::System.String value);
        partial void OnAgencyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AutoId
        {
            get
            {
                return _AutoId;
            }
            set
            {
                OnAutoIdChanging(value);
                ReportPropertyChanging("AutoId");
                _AutoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoId");
                OnAutoIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AutoId;
        partial void OnAutoIdChanging(Nullable<global::System.Int32> value);
        partial void OnAutoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DriverExperienceYears
        {
            get
            {
                return _DriverExperienceYears;
            }
            set
            {
                OnDriverExperienceYearsChanging(value);
                ReportPropertyChanging("DriverExperienceYears");
                _DriverExperienceYears = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DriverExperienceYears");
                OnDriverExperienceYearsChanged();
            }
        }
        private Nullable<global::System.Int32> _DriverExperienceYears;
        partial void OnDriverExperienceYearsChanging(Nullable<global::System.Int32> value);
        partial void OnDriverExperienceYearsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasAccidents
        {
            get
            {
                return _HasAccidents;
            }
            set
            {
                OnHasAccidentsChanging(value);
                ReportPropertyChanging("HasAccidents");
                _HasAccidents = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasAccidents");
                OnHasAccidentsChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasAccidents;
        partial void OnHasAccidentsChanging(Nullable<global::System.Boolean> value);
        partial void OnHasAccidentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_InsuarancePolicy_Agencies", "Agencies")]
        public Agency Agency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agency>("AutoInsuarance.Model.FK_InsuarancePolicy_Agencies", "Agencies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agency>("AutoInsuarance.Model.FK_InsuarancePolicy_Agencies", "Agencies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agency> AgencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agency>("AutoInsuarance.Model.FK_InsuarancePolicy_Agencies", "Agencies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agency>("AutoInsuarance.Model.FK_InsuarancePolicy_Agencies", "Agencies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_InsurancePolicy_Autos", "Autos")]
        public Auto Auto
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoInsuarance.Model.FK_InsurancePolicy_Autos", "Autos").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoInsuarance.Model.FK_InsurancePolicy_Autos", "Autos").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Auto> AutoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Auto>("AutoInsuarance.Model.FK_InsurancePolicy_Autos", "Autos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Auto>("AutoInsuarance.Model.FK_InsurancePolicy_Autos", "Autos", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_InsuarancePolicy_Companies", "Companies")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("AutoInsuarance.Model.FK_InsuarancePolicy_Companies", "Companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("AutoInsuarance.Model.FK_InsuarancePolicy_Companies", "Companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("AutoInsuarance.Model.FK_InsuarancePolicy_Companies", "Companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("AutoInsuarance.Model.FK_InsuarancePolicy_Companies", "Companies", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoInsuarance.Model", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personId">Initial value of the PersonId property.</param>
        public static Person CreatePerson(global::System.Int32 personId)
        {
            Person person = new Person();
            person.PersonId = personId;
            return person;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                if (_PersonId != value)
                {
                    OnPersonIdChanging(value);
                    ReportPropertyChanging("PersonId");
                    _PersonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonId");
                    OnPersonIdChanged();
                }
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_Autos_Persons", "Autos")]
        public EntityCollection<Auto> Autos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auto>("AutoInsuarance.Model.FK_Autos_Persons", "Autos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auto>("AutoInsuarance.Model.FK_Autos_Persons", "Autos", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoInsuarance.Model", Name="Purpose")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Purpose : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Purpose object.
        /// </summary>
        /// <param name="purposeId">Initial value of the PurposeId property.</param>
        public static Purpose CreatePurpose(global::System.Int32 purposeId)
        {
            Purpose purpose = new Purpose();
            purpose.PurposeId = purposeId;
            return purpose;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PurposeId
        {
            get
            {
                return _PurposeId;
            }
            set
            {
                if (_PurposeId != value)
                {
                    OnPurposeIdChanging(value);
                    ReportPropertyChanging("PurposeId");
                    _PurposeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PurposeId");
                    OnPurposeIdChanged();
                }
            }
        }
        private global::System.Int32 _PurposeId;
        partial void OnPurposeIdChanging(global::System.Int32 value);
        partial void OnPurposeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Coeficient
        {
            get
            {
                return _Coeficient;
            }
            set
            {
                OnCoeficientChanging(value);
                ReportPropertyChanging("Coeficient");
                _Coeficient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Coeficient");
                OnCoeficientChanged();
            }
        }
        private Nullable<global::System.Decimal> _Coeficient;
        partial void OnCoeficientChanging(Nullable<global::System.Decimal> value);
        partial void OnCoeficientChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoInsuarance.Model", "FK_Autos_Purposes", "Autos")]
        public EntityCollection<Auto> Autos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Auto>("AutoInsuarance.Model.FK_Autos_Purposes", "Autos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Auto>("AutoInsuarance.Model.FK_Autos_Purposes", "Autos", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
